@code {
    [CascadingParameter] MudDialogInstance _mudDialog { get; set; }
    [Parameter]
    public string Email { get; set; }

    PasswordResetViewModel model = new();
    protected override void OnInitialized()
    {
        _mudDialog.SetOptions(new DialogOptions() { MaxWidth = MaxWidth.ExtraExtraLarge, CloseButton = true, DisableBackdropClick = true, FullWidth = true, FullScreen = true });
    }
    bool isLoading = false;
    async Task Submit()
    {
        if(!model.NewPassword.Equals(model.ConfirmPassword, StringComparison.InvariantCulture))
        {
            snackbar.Add("Password does not match.", Severity.Error);
            return;
        }
        isLoading = true;
        await InvokeAsync(StateHasChanged);
        model.Email = Email;
        try
        {
            var result = await db.ChangePassword(model);
            if (result != null)
            {
                snackbar.Add("Password changed!", Severity.Success);
                _mudDialog.Close(DialogResult.Ok(true));
            }
        }
        catch (Exception e)
        {
            snackbar.Add("Incorrect credentials.", Severity.Error);
        }
        isLoading = false;
        await InvokeAsync(StateHasChanged);
    }
}

<MudDialog>
    <DialogContent>
        <MudTextField InputType="InputType.Password" AutoFocus Disabled="isLoading" Immediate @bind-Value="model.CurrentPassword" Class="mt-3" T="string" Variant="Variant.Outlined" Label="Current Password" />
        <MudTextField InputType="InputType.Password" Disabled="isLoading" Immediate @bind-Value="model.NewPassword" Class="mt-3" T="string" Variant="Variant.Outlined" Label="New Password" />
        <MudTextField InputType="InputType.Password" Disabled="isLoading" Immediate @bind-Value="model.ConfirmPassword" Class="mt-3" T="string" Variant="Variant.Outlined" Label="Confirm Password" />
    </DialogContent>
    <DialogActions>
        <MudButton Disabled="@(isLoading || string.IsNullOrEmpty(model.NewPassword)|| string.IsNullOrEmpty(model.CurrentPassword) || string.IsNullOrEmpty(model.ConfirmPassword))" OnClick="Submit" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Send" Variant="Variant.Filled" DisableElevation Size="Size.Small">Submit</MudButton>
    </DialogActions>
    </MudDialog>
